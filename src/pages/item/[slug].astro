---import BaseLayout from '../../layouts/BaseLayout.astro'import Clover from '../../components/IIIF/Clover'import items from '../../data/items.json'import { slugify } from '../../utils/slugify.js'import { Schema } from 'astro-seo-schema'// Generate dynamic paths using slugs// Generate dynamic paths using slugsexport async function getStaticPaths() {	const paths = items		.map((item) => {			const slug = item.slug || slugify(item.title)			return slug ? { params: { slug } } : null		})		.filter(Boolean)	return paths}const { slug } = Astro.params// Find the item with the matching slugconst itemData = items.find((item) => item.slug === slug || slugify(item.slug) === slug)if (!itemData) {	throw new Error(`Item with slug ${slug} not found.`)}const manifestUrls = Array.isArray(itemData.manifestUrl) ? itemData.manifestUrl : [itemData.manifestUrl]// Function to slugify URIconst subjectLinks = (itemData.subjectAI || []).map(subject => ({	name: subject.name,	slug: slugify(subject.name)}))---<BaseLayout title={itemData.title || 'Untitled'}>	<section class="py-8 bg-white md:py-16 dark:bg-gray-900 antialiased">		<div class="max-w-screen-xl px-4 mx-auto 2xl:px-0">			<div class="lg:grid lg:grid-cols-2 lg:gap-8 xl:gap-16">				<!-- IIIF Viewer Section -->				<div class="w-full mx-auto">					<Clover client:only="react" manifestUrls={manifestUrls} />				</div>				<!-- Item Details Section -->				<div class="mt-6 sm:mt-8 lg:mt-0">					<h1 class="text-2xl font-bold text-gray-900 sm:text-3xl dark:text-white">						{itemData.title}					</h1>					<hr class="my-6 border-gray-200 dark:border-gray-800" />					<p class="text-lg text-gray-700 dark:text-gray-300">{itemData.description || 'No description available.'}</p>					<hr class="my-6 border-gray-200 dark:border-gray-800" />					<!-- Subjects Section -->					<h2 class="text-lg font-semibold text-gray-700 dark:text-gray-200 mb-4">Subjects</h2>					{subjectLinks.length > 0 ? (						<ul class="list-disc ml-6">							{subjectLinks.map(({ name, slug }) => (								<li key={slug}>									<a										href={`/subject/${slug}`}										class="text-blue-600 hover:underline"									>										{name}									</a>								</li>							))}						</ul>					) : (						<p class="text-gray-600 dark:text-gray-400">No subjects available.</p>					)}				</div>			</div>		</div>	</section></BaseLayout>