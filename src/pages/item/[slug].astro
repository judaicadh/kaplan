---import BaseLayout from '../../layouts/BaseLayout.astro';import IIIFViewer from "../../components/IIIF/IIIFViewer.jsx"; // Ensure this path is correctimport items from '../../data/items.json'; // Import your items dataimport { slugify } from '../../utils/slugify.js';// Generate dynamic paths using slugsexport async function getStaticPaths() {    const paths = items.map((item) => {        // Generate slug if it doesn't exist        const slug = item.slug || slugify(item.title);        // Log the generated slug for debugging        console.log(`Item ID: ${item.id}, Title: ${item.title}, Generated Slug: ${slug}`);        // Return the slug only if it's valid        return slug ? { params: { slug } } : null; // Return null if slug is empty    }).filter(Boolean); // Filter out any null values    // Check if paths are valid    if (paths.length === 0) {        console.warn("No valid paths generated for static pages.");    }    return paths;}// Get the dynamic slug from the URLconst { slug } = Astro.params;// Find the item with the matching slugconst itemData = items.find((item) => item.slug === slug || slugify(item.title) === slug);if (!itemData) {    throw new Error(`Item with slug ${slug} not found.`);}const viewerManifest = itemData.manifestUrl;---<BaseLayout title={itemData.title  || "N/A"} />    <div class="bg-white">        <div class="mx-auto grid max-w-7xl grid-cols-1 items-center gap-x-8 gap-y-16 px-4 py-24 sm:px-6 sm:py-32 lg:grid-cols-2">            <div>                <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">{itemData.title}</h2>                <p class="mt-4 text-gray-500">{itemData.title}</p>                <dl class="mt-16 grid gap-x-6 gap-y-10 sm:gap-y-16 lg:gap-x-8">                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Description</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.description}</dd>                    </div>                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Physical Location</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.PhysicalLocation}</dd>                    </div>                    <div class="border-t border-gray-200 pt-1">                        <dt class="font-medium text-gray-900">Type</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.type || "N/A"}</dd>                        <dd class="mt-2 text-sm text-gray-500">{itemData.subtype || "N/A"}</dd>                    </div>                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Geographic Information</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.geography || "N/A"}</dd>                    </div>                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Associated People</dt>                        <dd class="mt-2 text-sm text-gray-500">                            <a href={`/biographies/${itemData.peopleURI ? itemData.peopleURI.split('/').pop() : '#'}`}>                                {itemData.people || "N/A"}                            </a>                        </dd>                    </div>                </dl>            </div>            <div>                <!-- Pass the viewerManifest to the IIIFViewer -->                <IIIFViewer manifestUrl={viewerManifest} client:only="react" />            </div>        </div>    </div>