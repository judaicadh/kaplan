---import BaseLayout from '../../layouts/BaseLayout.astro';import IIIFViewer from "../../components/IIIF/IIIFViewer";import items from '../../data/items.json'; // Import your items dataimport { slugify } from '../../utils/slugify.js';// Generate dynamic paths using slugsexport async function getStaticPaths() {    const paths = items.map((item) => {        // Generate slug if it doesn't exist        const slug = item.slug || slugify(item.title);        // Log the generated slug for debugging        console.log(`Item ID: ${item.id}, Title: ${item.title}, Generated Slug: ${slug}`);        // Return the slug only if it's valid        return slug ? { params: { slug } } : null; // Return null if slug is empty    }).filter(Boolean); // Filter out any null values    // Check if paths are valid    if (paths.length === 0) {        console.warn("No valid paths generated for static pages.");    }    return paths;}// Get the dynamic slug from the URLconst { slug } = Astro.params;// Find the item with the matching slugconst itemData = items.find((item) => item.slug === slug || slugify(item.title) === slug);if (!itemData) {    throw new Error(`Item with slug ${slug} not found.`);}const viewerManifest = itemData.manifestUrl;---<BaseLayout title={itemData.title  || "N/A"} />    <div class="bg-white">        <div class="mx-auto grid max-w-7xl grid-cols-1 items-center gap-x-8 gap-y-16 px-4 py-24 sm:px-6 sm:py-32 lg:grid-cols-2">            <div>                <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">{itemData.title}</h2>                <p class="mt-4 text-gray-500">{itemData.title}</p>                <dl class="mt-16 grid gap-x-6 gap-y-10 sm:gap-y-16 lg:gap-x-8">                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Description</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.description}</dd>                    </div>                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Physical Location</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.PhysicalLocation}</dd>                    </div>                    <div class="border-t border-gray-200 pt-1">                        <dt class="font-medium text-gray-900">Type</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.type || "N/A"}</dd>                        <dd class="mt-2 text-sm text-gray-500">{itemData.subtype || "N/A"}</dd>                    </div>                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Geographic Information</dt>                        <dd class="mt-2 text-sm text-gray-500">{itemData.geography || "N/A"}</dd>                    </div>                    <div class="border-t border-gray-200 pt-4">                        <dt class="font-medium text-gray-900">Associated People</dt>                        <dd class="mt-2 text-sm text-gray-500">                            <a href={`/biographies/${itemData.peopleURI ? itemData.peopleURI.split('/').pop() : '#'}`}>                                {itemData.people || "N/A"}                            </a>                        </dd>                    </div>                </dl>            </div>            <div>                <div id="alert-border-1" class="flex items-center p-4 mb-4 text-blue-800 border-t-4 border-blue-300 bg-blue-50 dark:text-blue-400 dark:bg-gray-800 dark:border-blue-800" role="alert">                    <svg class="flex-shrink-0 w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">                        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>                    </svg>                    <div class="ms-3 text-sm font-medium">                        Some of the content on this page was edited by or generated with AI.  <a href="#" class="font-semibold underline hover:no-underline">Learn More</a>. See an error? <a href="#" class="font-semibold underline hover:no-underline" onclick="this.href='mailto:example@domain.com?subject=' + encodeURIComponent('Inquiry from Your Website') + '&body=' + encodeURIComponent('I would like to report an error on this page: ' + window.location.href);">Email Us</a>                    </div>                    <button type="button" class="ms-auto -mx-1.5 -my-1.5 bg-blue-50 text-blue-500 rounded-lg focus:ring-2 focus:ring-blue-400 p-1.5 hover:bg-blue-200 inline-flex items-center justify-center h-8 w-8 dark:bg-gray-800 dark:text-blue-400 dark:hover:bg-gray-700" data-dismiss-target="#alert-border-1" aria-label="Close">                        <span class="sr-only">Dismiss</span>                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>                        </svg>                    </button>                </div>            <div class="object-top" >                <!-- Pass the viewerManifest to the IIIFViewer -->                <IIIFViewer manifestUrl={viewerManifest} client:only="react" />            </div>        </div>        </div>    </div>